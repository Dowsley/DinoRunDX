package gfx {		import flash.display.MovieClip;	import flash.text.TextField;	import flash.utils.clearInterval;	import flash.utils.clearTimeout;	import flash.utils.setTimeout;		import base.Brain;	import base.MPManager;		import fx.ColorChange;		import supers.Dino;				public class Raptor extends Dino {				private var feeler:Object;		public var ccE:ColorChange;		public var eyeC:Array;		private var bodyC:Array;		private var blinkC:int=0;		private var SPD:Array = [0,.9,.96,1.03,1.1,1.18];		private var ACL:Array = [0,.01,.02,.04,.06,.08];		private var JMP:Array = [0,1,1.075,1.15,1.225,1.3];		private var STR:Array = [0,65,90,110,135,160];		var HF:Array = [[25,34],[43,47],[67,75],[93,101],[150,158],[179,187],[312,327],[354,364],[422,430],[452,460],[477,485],[507,515],[537,545],[562,570],[597,605],[627,635]];		var MF:Array = [[375,409],[1160,1174],[1237,1254],[1266,1283],[1293,1313],[1334,1432],[1452,1593],[1831,1961],[2088,2230],[2254,2515]];		var MF2:Array = [[1161,1163],[1385,1396],[1451,1461],[1472,1481],[1498,1506]];		var HB:Array = [[35,38]];		var MB:Array = [[2003,2067],[560,589],[620,650]];		public var grabbedBy:DactylFG;						override public function nulls() {						super.nulls();			ccE.nulls();			ccE=null;			eyeC=null;			bodyC=null;			SPD=null;			ACL=null;			JMP=null;			STR=null;					}						public function Raptor (o,br) {						//dino init			assignGFX(new _Raptor);			super.init (o,br,this);						//MP stats?			var mp:Boolean=(brain.S.mod=="MP"&&!brain.S.HR)?true:false;			var rlvl:int=1;			if (brain.S.mod=="MP") { rlvl=brain.interF.newRace.lvl; if (rlvl>5) { rlvl=5 } }			var spd:Number=(mp)?SPD[rlvl]:(brain.S.mods.indexOf("A")!=-1)?3:SPD[brain.sys2.stats.SPD];			var acl:Number=(mp)?ACL[rlvl]:(brain.S.mods.indexOf("A")!=-1)?0.1:ACL[brain.sys2.stats.ACL];			var jmp:Number=(mp)?JMP[rlvl]:(brain.S.mods.indexOf("B")!=-1||brain.S.HR||brain.S.NL)?1.4:JMP[brain.sys2.stats.JMP];			var str:Number=(mp)?STR[rlvl]:(brain.S.mods.indexOf("C")!=-1)?250:STR[brain.sys2.stats.STR];			if (brain.S.BL)				str = 175;			if (brain.S.df) {				jmp = 1.3;			}						//spd = 10; //temp			//acl = 1 // temp						//extra physics properties			//ph.sh = "circ2";			ph.f = .9;							//friction			ph.bn = 0;							//bounce			ph.g = .5;							//gravity			ph.m = str;							//mass (str)			ph.r = 21;							//radius						//ability vars			accelMax=accelMaxBase=accelMaxOrig=spd*(Config.FAST?5:1);			accelF=accelFBase=accelFOrig=acl*(Config.FAST?5:1);			jumpPow=jumpPowOrig=jmp;						//jump lvl for other dinos			o.lvl=4;						//food detector			hasExtra=true;			feeler = brain.create ( {nam:"FeelerF", px:x, py:y, master:this, r:80, depth:[0,0]} )						//trace (o.remote,o.clr,o.hat);						//dino colors			bodyC=brain.interF.dColors[o.clr].body;			var stripeC:Array=brain.interF.dColors[o.clr].stripe;			var dotC:Array=brain.interF.dColors[o.clr].dot;			eyeC=brain.interF.dColors[o.clr].eye;			//			body.dot.visible=true;			body.stripe.visible=true;			body.head.stripe.visible=true;			var ccB=new ColorChange (body.main); ccB.cChange ([bodyC[0],bodyC[1],bodyC[2],1,1,1,1]);			if ( dotC.length>0) { var ccD=new ColorChange (body.dot); ccD.cChange ([dotC[0],dotC[1],dotC[2],1,1,1,1]) } else { body.dot.visible=false }			if ( stripeC.length>0) { var ccS=new ColorChange (body.stripe); ccS.cChange ([stripeC[0],stripeC[1],stripeC[2],1,1,1,1]) } else { body.stripe.visible=false }			var ccH=new ColorChange (body.head.main); ccH.cChange ([bodyC[0],bodyC[1],bodyC[2],1,1,1,1]);			if ( stripeC.length>0) { var ccHS=new ColorChange (body.head.stripe); ccHS.cChange ([stripeC[0],stripeC[1],stripeC[2],1,1,1,1]) } else { body.head.stripe.visible=false }			var ccHE=new ColorChange (body.head.eye); ccHE.cChange ([eyeC[0],eyeC[1],eyeC[2],1,1,1,1]);			ccE=new ColorChange (body.eye); ccE.cChange ([eyeC[0],eyeC[1],eyeC[2],1,1,1,1]);						//face right			graphic.gotoAndStop ("R");						//hat			if (o.hat=="0") { body.hat.visible=false }						hideSpeech();								}								var timerID:int;		var speechID:int;				// MAIN LOOP				public function pounceBounce():void		{			//vel.y*=-1;		//	vel.x*=1.5;		}		public var bdc:Number = .01;				public function darkTouched():void		{			//trace (9);		}				//public var gore:Boolean = false;		public function showGore():void		{			bdc = 1;			gore = true;			str = true;		}		public function hideGore():void		{			gore = false;			str = false;		}				public function sit():void		{			trace (9);			master.body.gotoAndPlay ("StillA");		}				public function wave():void		{			master.body.gotoAndPlay ("StillC");		}				public static var speeches:Object = {};				public function hideSpeech():void		{			graphic.speech.visible = false;			speeches[speechID] = {val:"", yo:0};		}				public function showSpeech(txt:String,id:int=0):void {			if (id == 0 && o.remote) {				id = (brain.sys.MP as MPManager).Self.id;			}			speechID = id;			speeches[speechID] = {val:"", yo:0};			graphic.speech.visible = true;			graphic.speech.txt.text = txt;			graphic.speech.txt2.text = txt;			flash.utils.clearTimeout(timerID);			timerID = flash.utils.setTimeout(hideSpeech,Math.max(3000,txt.length*100));			graphic.speech.y = -56 + ((3-(graphic.speech.txt as TextField).numLines)*26);		}				public function main () {						//remote speech			if (o.remote && graphic.speech.visible == true) {				//-108, -40												var xd:Number = brain.dino.x - x;				var yd:Number = brain.dino.y - y;				var xo:Number = Math.abs(xd) > 400 ? xd : -108;				var yo:Number = Math.abs(yd) > 200 ? yd : -56 + ((3-(graphic.speech.txt as TextField).numLines)*26);				var left:int = xd > 400 ? -350 : 0;				var right:int = xd < -400 ? 200 : 0;				var up:int = yd > 200 ? -180 : 0;				var down:int = yd < -200 ? 180 : 0;				if (left || right)					yo = yd;				if (up || down)					xo = xd;				//trace (xd,yd,xo,yo,left,right,up,down);								speeches[speechID].val = left+"_"+right+"_"+up+"_"+down;				var val:String;				for (var id:int in speeches) {					//trace (id,speeches[id].val,speeches[id].yo);									if ((id != speechID) && speeches[id].val == speeches[speechID].val && speeches[id].yo == speeches[speechID].yo) {						if (speechID > id) {							speeches[speechID].yo -= 60;						}					}				}				var xt:Number = xo+left+right;				var yt:Number = yo+up+down+speeches[speechID].yo;				graphic.speech.x += (xt-graphic.speech.x)*.3;				graphic.speech.y += (yt-graphic.speech.y)*.3;			}									if (ph.m==250) { str=true }						//blood drip?			if (brain.S.sl || gore) {				bdc -= .005;				if (brain.S.mod=="MP" && !gore) {					bdc -= .01;				}				var limit:Number = gore ? .1 : .01;				if (bdc < limit) {					bdc = limit;				}				if (rand2(0,1) < bdc)					brain.create ({nam:"Blood", px:x+(dir == "R" ? rand(15,30) : rand(-15,-30)), py:y+rand(-12,3), vx:vel.x+rand(-1,1), vy:rand(-2,0), depth:["world","main"]})			}						//run functions common to all Dinos			mainDino ();									if (!inter) { return }						//update body parts			try {				var f:int=body.currentFrame;				body.eye.gotoAndStop (f);				body.main.gotoAndStop (f);				body.dot.gotoAndStop (f);				body.stripe.gotoAndStop (f);				var h:int=body.head.currentFrame;				body.head.main.gotoAndStop (h);				body.head.eye.gotoAndStop (h);				body.head.stripe.gotoAndStop (h);			} catch (e) {}									//hats			if ((o.hat!="0" && o.hat!="xx") || brain.forceHat) {								var hatID:String = brain.forceHat ?  brain.forceHat : o.hat;								var hid:String;				var cf:int=body.currentFrame;				var hcf:int=body.head.currentFrame;				if ((cf>=129&&cf<=166)||(cf>=710&&cf<=730)) { hid="4" } else if (cf>=931&&cf<=1077) { hid="5" } else { hid="1" }				for each (var b1:Array in HF) { if (hcf>=b1[0]&&hcf<=b1[1]) { hid="2"; break } }				if (hid!="2") { for each (var b2:Array in MF) { if (cf>=b2[0]&&cf<=b2[1]) { hid="2"; break } } }				if (hid!="2") { for each (var b3:Array in HB) { if (hcf>=b3[0]&&hcf<=b3[1]) { hid="3"; break } } }				if (hid!="2") { for each (var b4:Array in MB) { if (cf>=b4[0]&&cf<=b4[1]) { hid="3"; break } } }				for each (var b5:Array in MF2) { if (cf>=b5[0]&&cf<=b5[1]) { hid="6"; break } }				body.hat.gotoAndStop (hatID+hid);				body.hat.x=body.head.x;				body.hat.y=body.head.y;				body.head.emo.y=-15-body.hat.height;							}						//eye blink			if (rand(0,250)==0) { 							ccE.cChange ([bodyC[0],bodyC[1],bodyC[2],1,1,1,1]);				blinkC=rand(4,20);							}			if (blinkC>0) {								blinkC--;				if (blinkC<=0) { ccE.cChange ([eyeC[0],eyeC[1],eyeC[2],1,1,1,1]) }							}							}				public function removeExtras () {						feeler.deleteAll();			feeler=null;			removeList();			hasExtra=false;					}			}	}