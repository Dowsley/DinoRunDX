package gfx {		import flash.display.MovieClip;		import supers.DinoNP;		public class Para extends DinoNP {				private var xh:Array;		public var pData:Object;		private var buC:uint=0;		private var feeler:Object;		public var dinoR:Object;		public var oDR:Boolean=false;		public var drc:int=0;				override public function nulls() {						super.nulls();			dinoR=null;			pData=null;					}				public function Para (o,br) {						//dino init			var v:int = Math2.randInt(1,4);			switch (v) {				case 1:				case 2:					assignGFX(new _Para);					break;				case 3:					assignGFX(new _Para2);					break;				case 4:					assignGFX(new _Para2);					break;			}						super.init (o,br,this);						//extra physics properties			ph.f = .9,			//friction			ph.bn = 0,			//bounce			ph.g = .6,			//gravity			ph.m = 200,			//mass			ph.r = 33			//radius						//other vars			var am:Number=brain.dino.accelMaxBase*1.175;			accelMax=accelMaxBase=(o.remote)?o.am:rand2(am-.03,am+.07);			accelF=accelFBase=.025;			angI=15;			ride=true;						//feeler			hasExtra=true;			feeler = brain.create ( {nam:"Feeler", px:x, py:y, master:this, r:120, depth:[0,0]} )						//init dir			keys.R=(brain.S.mod=="MP")?false:true;			vel.x=1;						//misc			xh=[0,0];			pData = { score:200 }						//broadcast creation?			if (brain.S.mod=="MP"&&o.remote==undefined) { brain.sys.MP.sendToRoom ("OC"+"px:"+rnd(o.px)+";py:"+rnd(o.py)+";am:"+accelMax+";rdt:"+(o.rData?roomID:0)+";nam:Para") }						/*if (brain.S.gh) {				graphic.alpha = .25;			}*/		}				public function feelerContact (obj) {						if (obj.o.nam!="Raptor") {								var pos2=obj.pos;				if (Math.abs(Math.atan2(pos2.y-pos.y,pos2.x-pos.x))<.8) { jump(obj.o.lvl) }							}					}				public function removeExtras() {						feeler.deleteAll();			feeler=null;			hasExtra=false;					}				public function newRide (dino) {						drc=(brain.S.mod=="MP")?300:rand(200,400);			dinoR=dino;					}				// MAIN LOOP				public function main () {						//run functions common to all Dinos			mainDino ();						if (dinoR==null) {								//rev?				xh.unshift (pos.x)				xh.pop();				if (Math.abs(xh[0]-xh[1])<.1) { buC=1 }							} else {								//toss dino?				drc--;				if (drc<0 && !brain.S.HH) {										if (dinoR.riding==this) { 											dinoR.paraToss() ;						if (body.head!=null) { body.head.gotoAndPlay ("throw") }						keys.R=keys.L=false;											} 					dinoR=null;				}								accelMax=accelMaxBase+.2;				//jumping				if (jumpC>0&&dinoR!=null) {										jumpC++;										if (jumpC<11) {												vel.x+=(dinoR.jumpPow+((11-jumpC)*.01))*Math.sin(ang);						vel.y-=(dinoR.jumpPow+((11-jumpC)*.02))*Math.cos(ang)+0												//cap air speed						if (vel.x>12) { vel.x=12 }						if (vel.x<-12) { vel.x=-12 }						if (vel.y>12) { vel.y=12 }						if (vel.y<-12) { vel.y=-12 }							}									}							}								}				override public function finalActions():void {						//back up and try again?			if (buC>0) {								buC++;				switch (buC) {										case 2:					rev();					break;										case 25:					rev();					break;										case 32:					jump (4);					break;										case 34:					buC=0;					break;									}							}						newPos();					}				override public function jump (lvl) {						if (!jumping&&near) {								if (!dinoR) {										jumping=true;					vel.x+=(lvl)*Math.sin(ang);					vel.y-=(lvl*2)*Math.cos(ang)+(vel.y>0?Math.abs(vel.y)/2.5:0);					pos.y-=.5;								} 							}		}				public function jumpD() {						if (near) { if (dinoR!=null) {							vel.x+=((ang*dirA<0)?((dinoR.jumpPow+.2)*Math.sin(ang)+(vel.y>0?Math.abs(vel.y)/2:0)):0)+1;				vel.y-=(dinoR.jumpPow+.35)*Math.cos(ang)+(vel.y>0?(ang*dirA)*-8.5:(ang*dirA)*5)				jumpC=1;										//audio				brain.sys.audio.ply ("j"+rand(1,4),.75,false);							} }							}				public function jumpU () { jumpC=0 }				override public function JAContact (obj) {						if (!dinoR) { jump (obj.o.lvl) }					}				}	}