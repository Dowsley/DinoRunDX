package gfx {		import base.Brain;		import flash.display.MovieClip;		import fx.ColorChange;	import fx.Grabbed;		import supers.MovingClip;
		public class DactylRed extends MovingClip {				public var xm:Number;		public var ym:Number;		public var txm:Number;		public var tym:Number;		private var cc:ColorChange;		private var yA:Number=0;		public var feeler:Object;		public var dClose:Boolean=false;		public var odc:Boolean=false;		public var grabbing:Boolean=false;		public var MP:Boolean=false;		public var BC:Boolean=false;		public var mpc:int=0;		private var tx:Number;		private var ty:Number;		private var bd:int;		private var fc:Boolean=false;		private var straight:Boolean;				override public function nulls() {						super.nulls();			cc.nulls();			cc=null;					}				public function DactylRed (o,br):void {						//dino init			assignGFX(new _DactylRed);			feet = graphic.feet;			mouth = graphic.mouth;			super.init (o,br,this);			straight = brain.S.HH && brain.S.mod=="PlanetD" && Brain.dinoGrabbed;									if (o.remote) {								xm=txm=o.xm;				ym=tym=o.ym;				tx=x=pos.x+(xm*3);				ty=y=pos.y;							} else {								xm=txm=rand2(-6.5,-5)				ym=tym=straight ? 0 : 10;							}						//extra physics properties			ph.sh = "circ";		//shape			ph.f = 0;			//friction			ph.bn = 0;			//bounce			ph.g = 0;			//gravity			ph.m = 20;			//mass			ph.r = 16			//radius						//random color variation			var offR:int=0;			var offG:int=0;			var offB:int=0;			switch (brain.S.colorV) { 							case "B": offR=offB=rand(-20,-40); offG=-10; break ;				case "C": offR=offG=offB=rand(-20,-40); break ;							}						cc = new ColorChange (this);			var c:uint = brain.rand (0,10);			var m:Number = rand (.8,1);			cc.cChange ([c+offR,c+offG,c+offB,m,m+rand(0,.4),m,1]);						//feeler			hasExtra=true;			feeler = brain.create ( {nam:"FeelerG", px:x, py:y, master:this, r:45, depth:[0,0]} );						//brodcast			if (brain.S.mod=="MP") {								MP=true;				if (!o.remote) {										ym=10;					BC=true; 					broadcastObj ("OC"+"px:"+rnd(o.px)+";py:"+rnd(o.py)+";xm:"+rnd2(xm)+";ym:"+rnd2(ym)+";rdt:0;nam:DactylRed");									}							}						if (brain.S.gh) {				cc.cChange ([255,255,255,1,1,1,.5]);			}							}				public function feelerGContact () {						fc=true;					}				public function rnd2 (num) { return (Math.round(num*100))/100 }				public function remoteUpdate (px,py,vx,vy) {						tx=Number(px)+(xm*3);			ty=Number(py);			txm=vx;			tym=vy;						//snap?			if (Math.abs(tx-x)>100) { x=tx };					}				public function main ():void {						//smoke			if (rand(0,2)==0) { brain.create ({nam:"Smoke", px:x+rand(-1*ph.r,ph.r), py:y-rand(0,40), v:rand(-4,-2), sz:rand(10,20), dur:2, front:(rand(0,1)==0)?true:false, depth:["world","main"]}) }						//fly			if (fc) { yA=1*brain.dino.accelMax; ym=tym=0; fc=false }						if (!MP) {								txm+=rand2(-.1,.1);				tym+=rand2(-.2,.205)-yA;				if (tym<0) { tym=0}							} else {								if (BC) {										//broadcasted movement					mpc++;					if (mpc>=20) {												mpc=0;						txm+=rand2(-.2,.2);						tym+=rand2(-.5,.51)-yA;						if (tym<0) { tym=0 }						brain.sys.MP.sendToRoom ("OU"+o.nam+";"+o.mpid+";"+Math.round(x)+";"+Math.round(y)+";"+rnd2(txm)+";"+rnd2(tym));											}									} else {										//remote info movement					tx+=xm;					ty+=ym;					x+=(tx-x)/8;					y+=(ty-y)/8;								}										}						xm+=(txm-xm)/8;			ym+=((tym-ym)/4)-yA*4;						x+=(xm*brain.hc);			y+=(ym*brain.hc);						pos.x=x;			pos.y=y;						//squawk?			if (rand(0,100)==0) { if (mouth.currentFrame==1) { mouth.gotoAndPlay ("squawk") } }						//remove?			if (brain.dino.pos.x-x>600) {								deleteAll();							}						yA=0;						//dino close			if (brain.dino.sys.grabbed==undefined) {								if (dClose) { 									if (!odc) {												feet.gotoAndPlay ("out") 											} 									} else { 									if (odc) {												feet.gotoAndPlay ("in") 											}									}							}			odc=dClose;			dClose=false;		}				public var feet:MovieClip;		public var mouth:MovieClip;				public function dinoClose()  { dClose=true }				public function dinoContact(dino) {											}				public function removeExtras() {						feeler.deleteAll();			feeler=null;			hasExtra=false;					}			}	}