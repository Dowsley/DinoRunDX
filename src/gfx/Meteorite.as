package gfx {		import flash.display.MovieClip;	import flash.geom.Point;		import fx.ColorChange;		import supers.MovingClip;		public class Meteorite extends MovingClip {				private var colorV:uint;		private var ang:int=0;		private var rollI:int;		private var rollC:int=-1;		private var vel2:Point;		private var dx:Number;		private var dc:Number=0;		private var masses:Array=[5,15,25,60,120,300];		private var colors:Array=[[],[50,0,0],[25,25,0],[0,0,0]];		private var colors2:Array=[[],[60,97,100],[39,76,89],[40,70,90]];		public var smc:Number=1;		private var cc:ColorChange;		private var hwc:int=0;		private var ccc:int=0;		public var bal:Boolean=false;		public var dTouch:Boolean=false;				override public function nulls() {						super.nulls();			masses=null;			colors=null;			colors2=null;			cc.nulls();			cc=null;					}				public function Meteorite (o,brain):void {						//appearance			assignGFX(new _Meteorite);			graphic.gotoAndStop ("b"+o.lvl+"_0");						//init			init (o,brain,this);			NN=true;						//extra physics properties			ph.sh = "circ";			//shape			ph.f = .99;				//friction			ph.bn = .75;			//bounce			ph.g = .25;				//gravity			ph.m = masses[o.lvl];	//mass						vel2 = new Point (0,0);						//ride?			if (o.lvl>3) { ph.r-=3; ride=true }						//big?			if (o.lvl>=4) { big=true }						//color variation			cc = new ColorChange (this);			colorV=(o.colorV==undefined)?rand(1,3):o.colorV;			var ca:int=brain.S.night?60:0			var r:int=colors[colorV][0]-ca;			var g:int=colors[colorV][1]-ca;			var b:int=colors[colorV][2]-ca;			/*switch (brain.S.colorV) {								case "B":				r-=15; g-=30; b-=15;				break;								case "C":				r-=15; g-=30; b-=30;				break;							}*/			cc.cChange ([r,g,b,1,1,1,1]);						if (brain.S.mod=="MP") {								if (!o.remote) { 									brain.sys.MP.sendToRoom ("OC"+"px:"+rnd(o.px)+";py:"+rnd(o.py)+";vx:"+rnd2(vel.x)+";vy:"+rnd2(vel.y)+";lvl:"+o.lvl+";rdt:"+(o.rData?roomID:0)+";nam:Meteorite") 									} else { brain.skyRed() }							}					}				public function rnd2(num) {						return (rnd(num*100))/100;					}				public function main ():void {						//run functions common to all MovingClips			mainMC ();									//crushed counter			if (o.cr) {								ccc++;				if (ccc>30) { o.cr=false }							}						//roll that thing			var vv=getVV(vel);			rollI = (vv<1)?(1-vv)*200:(9-vv)/1;			if (vv<.1) { rollI=100000000 }			rollC++;			if (rollC>rollI) {								rollC=-1;				ang=(vel.x>0)?ang+45:ang-45;				if (ang<0) { ang=315 }				if (ang>315) { ang=0 }				graphic.gotoAndStop ("b"+o.lvl+"_"+ang);							}						//hit Ground			if (near) { if (!oNear) {								hitAudio (vv);				if (o.lvl>3) { if (roomID==brain.dino.roomID) { brain.world.shakeC=vv*4 } }							} }			oNear=near;						//smoke			smc+=.025;			if (rand(0,smc)==0) {								var sv:int = (o.lvl==0)?12:20;				brain.create ({nam:"Smoke", px:x+rand(-1*ph.r,ph.r), py:(y-ph.r,y), v:rand(-4,-2), sz:rand(sv-8,sv), dur:2, front:(rand(0,1)==0)?true:false, depth:["world","main"]}) ;				if (o.lvl==5) { brain.create ({nam:"Smoke", px:x+rand(-1*ph.r,ph.r), py:(y-ph.r,y), v:rand(-4,-2), sz:rand(12,20), dur:2, front:(rand(0,1)==0)?true:false, depth:["world","main"]}) }							}					}				// REACTIONS				// bounced		public function bounce (v) {						vel2.x=vel.x;			vel2.y=vel.y;			vel.x=v.x;			vel.y=v.y;					}				public function remove (obj) {						deleteAll();					}					public function hitBoulder (obj) {						//create rocks?			var vv:Number = getVV(vel2);			if (vv>5) {								var l=rand(1,4);				for (var i:uint=1; i<=l; i++) { brain.create ({nam:"Rock", px:ip.x, py:ip.y, vx:rand(-4,4), vy:rand(-4,4), colorV:colorV, depth:["world","main"]}) }							}						//audio			hitAudio(vv);					}				public function hitAudio (vv) {						if (roomID==brain.dino.roomID) {				var vol=vv*.1;				if (vol>.7) { vol=.7 }				var lvl=o.lvl+1;				if (lvl>5) { lvl=5 }				if (!brain.dino.end) { brain.sys.audio.ply ("b"+lvl+""+rand(1,2),vol,false) }							}					}				public function dinoHit (dino) {						dTouch=true;			hitAudio (getVV(dino.vel));		}				public function hitWater (obj) {						smc+=2;			hwc++;			if (rand(0,hwc)<10) {							var l=rand(2,5);				for (var i=0; i<l; i++) { brain.create ({nam:"Smoke", px:x+rand(-1*ph.r,ph.r), py:(y-ph.r,y), v:rand(-4,-2), sz:rand(12,20), dur:2, depth:["world","main"]}) }				if (brain.S.night) { cc.cChange ([0,0,0,0,0,0,1]) } else { cc.cChange ([colors2[colorV][0],colors2[colorV][1],colors2[colorV][2],0,0,0,1]) }							}					}							public function shake (lvl) {						if (near) {								if (lvl>2) { lvl=2 }				vel.offset (rand(-1*lvl,lvl),rand(0,-1*lvl))							}					}				public function crush (obj) {						if ((obj.o.nam=="Cera"||obj.o.nam=="Stego"||obj.o.nam=="Raptor")&&o.lvl<4&&!o.cr) {							var rockMin:uint=0;				var rockMax:uint=0;				var bldMin:uint=0;				var bldMax:uint=0;								var bt:int=o.lvl+1;				if (bt>5) { bt=5 }				brain.sys.audio.ply ("b"+bt+""+rand(1,2),.75,false);								switch (Number(o.lvl)) {										case 0:					rockMin=2; rockMax=4;					break;										case 1:					rockMin=2; rockMax=3; bldMin=2; bldMax=3;					break;										case 2:					rockMin=3; rockMax=5; bldMin=2; bldMax=3;					break;										case 3:					rockMin=2; rockMax=3; bldMin=2; bldMax=4;					break;									}								var cMin:int=-1*ph.r;				var cMax:int=ph.r;								//ash				var r=rand(rockMin,rockMax);				for (var i:uint=1; i<=r; i++) {										if (smc<25) {						brain.create ({nam:"Ash", px:x+rand(cMin,cMax), py:y+rand(cMin,cMax), vx:vel.x+rand(-8,8), vy:vel.y+rand(-12,8), depth:["world","main"]})  					} else {						brain.create ({nam:"Rock", px:x+rand(cMin,cMax), py:y+rand(cMin,cMax), vx:vel.x+rand(-8,8), vy:vel.y+rand(-12,8), depth:["world","main"]}) 					}				}								//meteorites				var b=rand(bldMin,bldMax);				var tl:int=o.lvl-1;				for (var ii:uint=1; ii<=b; ii++) {										tl--;					if (tl<0) { tl=0 }										if (smc<25) {						brain.create ({nam:"Meteorite", px:x+rand(cMin,cMax), py:y+rand(cMin,cMax), vx:vel.x+rand(-8,8), vy:vel.y+rand(-12,8), colorV:colorV, lvl:tl, rd:true, cr:true, depth:["world","fgx"]}) 					} else {						brain.create ({nam:"Boulder", px:x+rand(cMin,cMax), py:y+rand(cMin,cMax), vx:vel.x+rand(-8,8), vy:vel.y+rand(-12,8), colorV:colorV, lvl:tl+1, rd:true, cr:true, depth:["world","main"]})					}									}								deleteAll();			}					}		}	}