package gfx {		import flash.display.MovieClip;	import flash.geom.Point;		import supers.MovingClip;		public class BoulderLG extends MovingClip {				private var ang:int=0;		private var rollI:int;		private var rollC:int=-1;		private var r:Boolean=false;		public var dinoR:Object;				public function BoulderLG (o,brain):void {						//appearance			assignGFX(new _BoulderLG);			graphic.gotoAndStop ("b_0");						//init			init (o,brain,this);						//extra physics properties			ph.sh = "circ";		//shape			ph.f = .996;		//friction			ph.bn = .75;		//bounce			ph.g = .24;			//gravity			ph.m = 500;			//mass			ph.r = 63;			//radius						//misc vars			ride=true;			big=true;						//broadcast creation?			if (brain.S.mod=="MP"&&o.remote==undefined) { brain.sys.MP.sendToRoom ("OC"+"px:"+rnd(o.px)+";py:"+rnd(o.py)+";vx:"+rnd2(vel.x)+";vy:"+rnd2(vel.y)+";rdt:"+(o.rData?roomID:0)+";nam:BoulderLG") }									}				public function main ():void {						//start rolling?			if (!r&&roomID==brain.dino.roomID) { vel.x+=.8; r=true }						ph.r=19;			//run functions common to all MovingClips			mainMC ();			ph.r=63;						//roll that boulder			var vv=getVV (vel);			rollI = (vv<1)?(1-vv)*60:(10-vv)/1;			if (vv<.1) { rollI=100000000 }			rollC++;			if (rollC>rollI) {								rollC=-1;				ang=(vel.x>0)?ang+15:ang-15;				if (ang<0) { ang=345 }				if (ang>345) { ang=0 }				graphic.gotoAndStop ("b_"+ang);							}						//run the dino			//var dino:Object=brain.dino;			//if (dino.riding!=null) { dino.vel.offset (vv/100,0) }										//hit Ground			if (near) { if (!oNear) {								hitAudio (vv);				if (roomID==brain.dino.roomID) { brain.world.shakeC=vv*4 } 							} }			oNear=near;						}				public function rnd2(num) {						return (rnd(num*100))/100;					}				// REACTIONS				// bounced		public function bounce (v) {						vel.x=v.x;			vel.y=v.y;					}				/*override public function applyVel (v:Point) {						//velocity vector cannot exceed radius			var vv:Number=getVV(vel)+.1;			if (vv>ph.r) { v.x*=(ph.r/vv); v.y*=(ph.r/vv)  }			//			pos.offset (v.x,v.y);			if (brain.dino.riding!=null) { brain.dino.applyVel (v) }					}*/				public function remove (obj) {						deleteAll();					}					public function hitAudio (vv) {						if (roomID==brain.dino.roomID) {								var dinoV:Point = brain.dino.vel;				vv=Math.sqrt((dinoV.x*dinoV.x)+(dinoV.y*dinoV.y))				var vol=vv*.1;				if (vol>.7) { vol=.7 }				brain.sys.audio.ply ("b6"+rand(1,2),vol,false);							}					}			}	}