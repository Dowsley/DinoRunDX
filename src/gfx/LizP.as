package gfx {		import supers.DinoNP;	//	import flash.display.MovieClip;		public class LizP extends DinoNP {				private var feeler:Object;		private var buC:uint=0;		public var pData:Object;				override public function nulls() {						super.nulls();			pData=null;					}				public function LizP (o,br) {						//dino init			assignGFX(new _LizP);			super.init (o,br,this);						soft = true;						//dont create if it's randonly placed in UG screen			if (o.cr) { if (brain.world.sArr[roomID].substring(0,2)=="sp") { deleteAll(); return } }						//extra physics properties			ph.f = .9;			//friction			ph.bn = 0;			//bounce			ph.g = .55;			//gravity			ph.m = 20;			//mass			ph.r = 12			//radius						//other vars			accelMax=accelMaxBase=rand2(1,1.2);			accelF=accelFBase=.02;			angI=15;						//feeler			hasExtra=true;			feeler = brain.create ( {nam:"Feeler", px:x, py:y, master:this, r:90, depth:[0,0]} )						//init dir			if (o.free) { keys[(rand(0,1)==0)?"L":"R"]=true } else { keys.R=true }			vel.x=1;						//pData			pData = { rFactor:1.25, rTime:150, jPow:1.15, jTime:200, score:250 }						//broadcast creation?			if (brain.S.mod=="MP"&&o.remote==undefined) { brain.sys.MP.sendToRoom ("OC"+"px:"+rnd(o.px)+";py:"+rnd(o.py)+";am:"+accelMax+";rdt:"+(o.rData?roomID:0)+";nam:LizP") }								}				// MAIN LOOP				public function main () {						//run functions common to all Dinos			mainDino ();		}				public function feelerContact (obj) {						var pos2=obj.pos;			if (Math.abs(Math.atan2(pos2.y-pos.y,pos2.x-pos.x))<.8) { jump(obj.o.lvl) }					}				public function removeExtras() {						feeler.deleteAll();			feeler=null;			hasExtra=false;					}				override public function finalActions():void {						//stuck?			if (Math.abs(vel.x)<.15&&Math.abs(vel.y)<.15) { if (o.free) { rev() } else if (buC==0&&!keys.L) { buC=1 } }						//back up and try again?			if (buC>0) {								buC++;				switch (buC) {										case 2:					rev();					break;										case 25:					rev();					break;										case 32:					jump (4.25);					break;										case 34:					buC=0;					break;									}							}						if (o.free) { if (rand(0,150)==0) { rev() } }						newPos();					}				public function eaten (obj) {						deleteAll();					}									}	}