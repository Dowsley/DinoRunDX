package gfx {		import flash.display.MovieClip;	import flash.geom.Point;		import supers.MovingClip;		import util.EventTimer;		public class Egg extends MovingClip {				private var typ;		private var ang:int=0;		private var rollI:int;		private var rollC:int=-1;				public function Egg (o,brain):void {						//init			assignGFX(new _Egg);			init (o,brain,this);			typ=o.typ;			NN=true;						//extra physics properties			ph.sh = "circ"						//shape			ph.f = .98;							//friction			ph.bn = .75;						//bounce			ph.g = (typ=="X")?0:(o.d?.2:.25);	//gravity			ph.m = 5;							//mass			ph.r+=3;						//typ + ang			ang = (typ=="X")?0:rand(-1,1)*30;			if (ang==-30) { ang=330 }			typ=(o.d)?rand(5,6):rand(1,4);			if (brain.S.ED)				typ = rand(7,8)									//appearance			graphic.gotoAndStop ("e"+typ+"_"+ang);						if (brain.S.ED)				gA = .5		}				public function main ():void {						//run functions common to all MovingClips			mainMC ();						//roll that egg			rollI = (Math.abs(vel.x)<1)?(1-Math.abs(vel.x))*100:(5-Math.abs(vel.x))/1;			if (Math.abs(vel.x)<.1) { rollI=100000000 }			rollC++;			if (rollC>rollI) {								rollC=-1;				ang=(vel.x>0)?ang+30:ang-30;				if (ang<0) { ang=330 }				if (ang>330) { ang=0 }				graphic.gotoAndStop ("e"+typ+"_"+ang);							}						//hit Ground			if (near) { if (!oNear) {								var vv=getVV(vel);				if (vv>10||(o.d&&vv>5)) { crack(new Point(vel.x*-1,vel.y*-1)) } else { hitAudio (vv) }							} }			oNear=near;		}				public function crack (v) {						if (!brain.S.ED)				brain.sys.audio.ply ("eggCrack",.35,false);									//egg shells			var a:uint=(typ==4||typ==6)?1:0			var l=rand(2+a,4+a);			for (var i:uint=1; i<l; i++) { brain.create ({nam:"EggShell", px:x+rand(-6,6), py:y+rand(-6,6), vx:v.x+rand(-6,6), vy:v.y+rand(-6,6), depth:["world","main"]}) }			//egg particles			var ll=rand(4+a,6+a);			for (var ii:uint=1; ii<ll; ii++) { brain.create ({nam:"EggParticle", px:x+rand(-6,6), py:y+rand(-6,6), vx:v.x+rand(-6,6), vy:v.y+rand(-6,6), depth:["world","main"]}) }			deleteAll();						}				// REACTIONS				// bounced		public function bounce (v) {						ph.g=.25;			vel.x=v.x;			vel.y=v.y;					}				public function collected (obj) {						if (brain.S.ED)				return;						if (!obj.o.remote) {							brain.sys.audio.ply (o.d?"dactylEgg":"egg"+rand(1,3),.8,false);								if (brain.sys2.stats.addP) {										brain.sys2.stats.addEgg(o.d);					brain.create ( {nam:"EggCollect", px:x, py:y, depth:["world","main"]} )									}				deleteAll();							}					}					public function hitBoulder (obj) {						var vv:Number = getVV(obj.vel);			if (vv*obj.o.lvl>10) { crack(obj.vel) } else { hitAudio(vv) }					}				public function crush (obj) {						trace ("crush");			crack (obj.vel);					}										public function hitAudio (vv) {						if (roomID==brain.dino.roomID) {								var vol=vv*.1;				if (vol>.7) { vol=.7 }				//brain.sys.audio.ply ("egg"+rand(1,2),vol,false);							}					}				public function shake (lvl) {						if (near) {								if (lvl>2) { lvl=2 }				vel.offset (rand(-1*lvl,lvl),rand(0,-1*lvl))							}					}			}	}