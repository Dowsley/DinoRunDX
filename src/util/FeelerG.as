package util {		import supers.Circle;	import flash.geom.Point;		public class FeelerG extends Circle {				private var master:Object;		public var ip:Point;		public var vd:Object;				public function FeelerG (o,br):void {						//init			super.init (o,br);			ip= new Point(0,0);						//extra physics properties			ph.sh = "circ";		//shape			ph.r = o.r;			//radius			big=true;						//master			master=o.master;			vd=master.vd;						}				override public function nulls () {						super.nulls();			master=null;			ip=null;			vd=null;					}				public function main ():void {						if (master.pos!=null) {							//follow master				pos.x=master.pos.x;				pos.y=master.pos.y;								//check current room position				var tmpRX:uint = Math.ceil((pos.x)/brain.sDim.w);				var tmpRY:uint = Math.ceil((pos.y)/brain.sDim.h);								//outside bounds? if not, check for room changes				if (tmpRX<=0||tmpRY<=0||tmpRX>brain.world.xNum||tmpRY>brain.world.yNum) {										inter=false;					master.deleteAll();					deleteAll();									} else if (roomA[0]!=tmpRX||roomA[1]!=tmpRY) {										//new roomID and roomA for circ_room interaction					roomA = [tmpRX,tmpRY];					roomID = "r"+tmpRX+"_"+tmpRY;										var vData:Object = brain.sys.vData.v.World1;					var tmpID:String=(brain.world.sArr[roomID]=="blank")?"r"+roomA[0]+"_"+((roomA[1])+1):roomID;					vd = (vData[tmpID]==undefined)?{}:vData[tmpID].lns;				}							}					}								// REACTIONS		public function contact (o) {						master.feelerGContact();		}				public function dinoClose (o) {						master.dinoClose();					}			}	}