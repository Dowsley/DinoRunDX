package util {		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.TimerEvent;	import flash.utils.Timer;		import base.Brain;	import base.MPManager;		import gfx.InterF;
		public class LevelStatsMP {				public var c:uint;		private var cd:int=10;		private var brain:Object;		private var MP:MPManager;		private var interF:Object;		private var interF2:InterF;		private var cc:Object;		private var colors:Array = [0xFFFFFF, 0xAAAAAA, 0x00FFFF, 0x00FF00]		private var go:Boolean=true;		private var nam1:String;		private var nam2:String;		private var nam3:String;		private var nam4:String;		private var nam5:String;		private var nam6:String;		private var cdTimer:Timer;		private var rOver:Boolean=false;		private var place:int;		private var scores:Array=[[],[0,4],[0,6,2],[0,8,3,1],[0,10,6,3,1],[0,15,8,4,2,1],[0,20,10,6,4,2,1]];		private var addScore:Number;		public var onePlayer:Boolean;						public function LevelStatsMP (brain,onePlayer):void {						this.brain=brain;			this.onePlayer=onePlayer;			c=0;			cdTimer = new Timer (1000,0);			MP=brain.sys.MP;			MP.current="endRace";			interF=brain.interF.graphic;			interF2=brain.interF;			brain.gState="win";			if (onePlayer) { addScore=4+(Math.round((interF2.newRace.lvl-1)/4)); MP.Self.score+=addScore; MP.saveStats2() }			//color changers			cc={ txt:{ A:"", B:"", C:"", D:"", E:"", F:"", G:""}, c:{ A:0, B:0, C:0, D:0, E:0, F:0, G:0 } }		}				public function raceOver () {						if (!rOver) {								rOver=true;				brain.mpGames++;				//brain.dino.noMov();				brain.doom.win=true;				interF2.raceOver();				stopCD();				var rankA:Array = MP.rankPlayersEnd();				for (var i:int=0; i<rankA.length; i++) { 									this["nam"+(i+1)]=rankA[i];					if (rankA[i]==MP.Self.nam) { place=(i+1) }								}								var levelBonus:int = (Math.round((interF2.newRace.lvl-1)/2));				if (interF2.newRace.lvl > 10) {					levelBonus *= 2;				}				addScore=scores[interF2.newRace.maxP][place]+levelBonus;				if (brain.S.df) {					addScore *= 2;				}								addScore *= Brain.MPMulti;							MP.Self.score+=addScore;				MP.saveStats2();				go=true;								brain.sys2.stats.updateMP(place==1&&!onePlayer);								//remove progBar				//brain.removeProgBar();								//seal entrance				var RR:Object = brain.world.roomRefs;				switch (brain.S.endID) {												case "X":					if (RR[brain.S.sRoom]!=undefined) { RR[brain.S.sRoom].bg.sealer.gotoAndPlay(2) }					brain.world.alter (brain.S.sRoom,"spX1_2B");					break;												case "XB":										break;										case "XC":										break;											}							}					}				public function cdDown (ev) {						cd--;			interF.cdNum.text=cd;			interF.cdNums.text=cd;			if (cd<=0) { raceOver() }								}				public function stopCD () {						cdTimer.stop();			cdTimer.removeEventListener (TimerEvent.TIMER, cdDown)			cdTimer=null;			interF.cdNum.text="";			interF.cdNums.text="";					}		public function main () {						if (go) { c++ }						switch (c) {								case 2:				if (onePlayer) {										interF.p2.text="No other dinos remain";					interF.p2s.text="No other dinos remain";									} else {										//start count down					interF.cdNum.text=cd;					interF.cdNums.text=cd;					cdTimer.addEventListener (TimerEvent.TIMER, cdDown, false, 0, true);					cdTimer.start();					go=false;					c=3;									}				break;								case 5:				if (onePlayer) { interF.p2.text="No other dinos remain"; interF.p2s.text="No other dinos remain"; }				break;								case 40:				if (onePlayer) {										showScore();					interF.lobbyReturn.visible=true;									} else {									interF.p1.text="1st: "+interF2.showNameByName(nam1);					interF.p1s.text="1st: "+interF2.showNameByName(nam1);					if (MP.Self.nam==nam1) { intro ("A", interF.p1) }									}				break;								case 80:				if (nam2!=null) {										interF.p2.text="2nd: "+interF2.showNameByName(nam2);					interF.p2s.text="2nd: "+interF2.showNameByName(nam2);					if (MP.Self.nam==nam2) { intro ("B", interF.p2) }									} else { showScore() }				break;								case 120:				if (nam3!=null) {										interF.p3.text="3rd: "+interF2.showNameByName(nam3);					interF.p3s.text="3rd: "+interF2.showNameByName(nam3);					if (MP.Self.nam==nam3) { intro ("C", interF.p3) }									} else { showScore() }				break;								case 160:				if (nam4!=null) {										interF.p4.text="4th: "+interF2.showNameByName(nam4);					interF.p4s.text="4th: "+interF2.showNameByName(nam4);					if (MP.Self.nam==nam4) { intro ("D", interF.p4) }									} else { showScore() }				break;								case 200:					if (nam5!=null) {												interF.p5.text="5th: "+interF2.showNameByName(nam5);						interF.p5s.text="5th: "+interF2.showNameByName(nam5);						if (MP.Self.nam==nam5) { intro ("E", interF.p5) }											} else { showScore() }					break;								case 240:					if (nam6!=null) {												interF.p6.text="6th: "+interF2.showNameByName(nam6);						interF.p6s.text="6th: "+interF2.showNameByName(nam6);						if (MP.Self.nam==nam6) { intro ("F", interF.p6) }											} else { showScore() }					interF.lobbyReturn.visible=true;					showScore();					break;								case 1200:					interF.p1.text="";					interF.p1s.text="";					interF.p2.text="";					interF.p2s.text="";					interF.p3.text="";					interF.p3s.text="";					interF.p4.text="";					interF.p4s.text="";					interF.p5.text="";					interF.p5s.text="";					interF.p6.text="";					interF.p6s.text="";					interF.score.text="";					interF.scores.text="";					interF.lobbyReturn.visible=false;												}						//color change			//text			for (var id in cc.txt) {								var txt=cc.txt[id];				if (txt!="") {										txt.textColor=colors[brain.rand(0,colors.length-1)];					cc.c[id]--;					if (cc.c[id]==0) { txt.textColor=0xFFFFFF; cc.txt[id]="" }									}							}												}				private function showScore () {						//level up?			var txtAdd:String="";			var newLvl:int=MP.getLvl(MP.Self.score);			if (newLvl>MP.Self.lvl) { txtAdd=", LEVEL UP"+(newLvl>=6?" + NEW HAIR!":"!") }						interF.score.text=(Brain.MPMulti == 1 ? "" : "Multiplier: X"+Brain.MPMulti+"       ")+"+"+addScore+" score"+txtAdd;			interF.scores.text=interF.score.text;			if (interF.score.text!="") { intro ("G", interF.score) }					}				public function intro (id,txt) {						cc.txt[id]=txt;			cc.c[id]=15;					}							public function remove () {						if (cdTimer!=null) {								cdTimer.stop();				cdTimer.removeEventListener (TimerEvent.TIMER, cdDown)				cdTimer=null;						}			interF=null;			interF2=null;			cc=null;			colors=null;			scores=null;			brain.removeSYS2 ("levelStatsMP");			brain=null;					}			}	}