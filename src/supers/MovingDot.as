package supers {		import flash.geom.Point;		public class MovingDot extends Dot {				public var vel:Point;		public var roomDel:Boolean;		private var world:String;		public var ip:Point;		public var vd:Object;				//////////////////////////////////////////////////		//////////////////////////////////////////////////				//aply velocity		public function applyForces () {						//gravity			vel.offset (0,ph.g);						//velocity vector cannot exceed radius			var vv:Number=(Math.sqrt((vel.x*vel.x)+(vel.y*vel.y)))+1;			if (vv>ph.r) { vel.x*=(ph.r/vv); vel.y*=(ph.r/vv)  }						//velocity			pos.offset (vel.x,vel.y);					}				public function applyVel (v:Point) {						//velocity vector cannot exceed radius			var vv:Number=Math.sqrt((v.x*vel.x)+(v.y*v.y));			if (vv>ph.r) { v.x*=(ph.r/vv); v.y*=(ph.r/vv)  }			//			pos.offset (v.x,v.y);					}													//init		override public function init (obj,br,trans,colr):void {						//more init from superClass			super.init (obj,br,trans,colr);						//special volcano?			if (brain.world.sp=="V2") { roomID="b"+roomID }						//get vector data			getVD();						//velocity			var vx:Number=(o.vx==undefined)?0:o.vx;			var vy:Number=(o.vy==undefined)?0:o.vy;			vel = new Point (vx,vy);						//ip			ip=new Point(0,0);						//define world			world = brain.world.cWorld;		}				//functions common to all MovingDots		public function mainMD () {						//apply forces to object			applyForces();						//check current room position			var tmpRX:uint = Math.ceil((pos.x)/brain.sDim.w);			var tmpRY:uint = Math.ceil((pos.y)/brain.sDim.h);			if (tmpRX==0||tmpRY==0||tmpRX>brain.world.xNum||tmpRY>brain.world.yNum) { deleteAll() } else if (roomA[0]!=tmpRX||roomA[1]!=tmpRY) {				roomA = [tmpRX,tmpRY];				roomID = "r"+roomA[0]+"_"+roomA[1];							}						//update vector data			getVD();					//run functions common to all Dots			mainD();					}				function getVD () {						var vData:Object = brain.sys.vData.v.World1;			var tmpID:String=(brain.world.sArr[roomID]=="blank")?"r"+roomA[0]+"_"+((roomA[1])+1):roomID;			vd = (vData[tmpID]==undefined)?{}:vData[tmpID].lns;						}				override public function nulls () {						super.nulls();			vel=null;			ip=null;			vd=null;					}				//final actions		override public function finalActions():void {						newPos();					}				// move the clip to a new position		public function newPos():void {						x=pos.x;			y=pos.y;					}			}}