package supers {		import flash.geom.Point;		public class Line extends Clip {				public var vel:Point;		public var pos2:Point;		public var still:Boolean=false;				public const rad:Number = Math.PI/180;				//////////////////////////////////////////////////		//////////////////////////////////////////////////				//aply velocity		public function applyVel () {						pos.offset (vel.x,vel.y);			pos2.offset (vel.x,vel.y);		}				public function applyVel2 () {						pos.offset (vel.x*.001,vel.y*.001);			pos2.offset (vel.x*.001,vel.y*.001);		}				//init		override public function init (obj,br):void {						//more init from superClass			super.init (obj,br);						//velocity			vel = Point.polar(o.speed, o.ang*rad);						//update gfx			newAng(o.ang);		}				//function common to all lines		public function mainL () {						//apply velocity to object			applyVel();						//check current room position			var tmpRX:uint = Math.ceil(pos2.x/brain.wData.w);			var tmpRY:uint = Math.ceil(pos2.y/brain.wData.h);			//			if (roomA[0]!=tmpRX||roomA[1]!=tmpRY) {									roomA = [tmpRX,tmpRY];				roomID = "r"+roomA[0]+"_"+roomA[1];								}						//run functions common to all Clips			mainC();					}				///change appearance of angle		public function newAng (a):void {						if (a<0) {a=360+a}			o.ang=a;						//round to 15			var visA:uint = Math.round(a/15)*15;			gotoAndStop ("a"+visA);						//define pos2			pos2 = pos.add (Point.polar(o.l, a*rad));					}				//bounce 		public function bounce (v):void {					vel.x=v.x;			vel.y=v.y;			pos.x=pos2.x;			pos.y=pos2.y;			newAng(Math.atan2(v.y,v.x)/rad);					}					//final actions		override public function finalActions():void {						newPos();					}				// move the clip to a new position 		public function newPos():void {						x=pos.x;			y=pos.y;					}			}}